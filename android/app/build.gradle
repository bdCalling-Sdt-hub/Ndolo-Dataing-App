plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")

// Load the keystore properties using Groovy's InputStream method
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(keystorePropertiesFile.newInputStream()) // Correct method in Groovy
}

android {
    namespace = "com.ndolo.ndolo_dating"
    compileSdk = 35
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.ndolo.ndolo_dating"
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties["keyAlias"] as String
            keyPassword keystoreProperties["keyPassword"] as String
            storeFile file(keystoreProperties["storeFile"] as String)
            storePassword keystoreProperties["storePassword"] as String
        }
    }




    buildTypes {
        release {
            signingConfig = signingConfigs.getByName("release")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            shrinkResources false
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
